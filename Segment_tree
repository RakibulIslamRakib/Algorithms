//here i have implement a segment tree for find the sum of an array within a given rangee
#include<bits/stdc++.h>
using namespace std;
#define MAX 100001
int arr[MAX];
int tree[MAX*4];

void built(int node,int beginn,int endd){
    if(beginn==endd){
        tree[node]=arr[endd];
        return;
    }
    int left=node*2;
    int right=node*2+1;
    int mid=(beginn+endd)/2;
    built(left,beginn,mid);
    built(right,mid+1,endd);
    tree[node]=tree[left]+tree[right];
}
int query(int node,int beginn,int endd,int begrange,int endrange){

    if(beginn>endrange||endd<begrange){
        return 0;
    }

    if(beginn>=begrange&&endd<=endrange){
        return tree[node];
    }

    int left=node*2;
    int right=node*2+1;
    int mid=(beginn+endd)/2;
    int qleft=query(left,beginn,mid,begrange,endrange);
    int qright=query(right,mid+1,endd,begrange,endrange);
    return qleft+qright;
}


int main(){
    int array_size;
    cin>>array_size;
    for(int i=1;i<=array_size;i++){
        cin>>arr[i];
    }
   built(1,1,array_size);

   int begrange,endrange;
   cin>>begrange>>endrange;
   int x=query(1,1,array_size,begrange,endrange);
   cout<<x;

}

